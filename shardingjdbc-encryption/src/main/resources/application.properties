# 应用名称
spring.application.name=sharding-jdbc-encryption


#===============数据源配置
# 命名数据源  这个是自定义的
spring.shardingsphere.datasource.names=db0
# 配置数据源ds0
spring.shardingsphere.datasource.db0.type=com.zaxxer.hikari.HikariDataSource
spring.shardingsphere.datasource.db0.driverClassName=com.mysql.jdbc.Driver
spring.shardingsphere.datasource.db0.jdbc-url=jdbc:mysql://192.168.52.10:3306/msb_encryption_db?useUnicode=true&serverTimezone=Asia/Shanghai&characterEncoding=utf-8&useSSL=false
spring.shardingsphere.datasource.db0.username=root
spring.shardingsphere.datasource.db0.password=QiDian@666

## 采用AES对称加密策略
#spring.shardingsphere.encrypt.encryptors.encryptor_aes.type=aes
#spring.shardingsphere.encrypt.encryptors.encryptor_aes.props.aes.key.value=123456abc
#
## password为逻辑列，password.plainColumn为数据表明文列，password.cipherColumn为数据表密文列
#spring.shardingsphere.encrypt.tables.t_user.columns.password.plainColumn=password
#spring.shardingsphere.encrypt.tables.t_user.columns.password.cipherColumn=password_encrypt
#spring.shardingsphere.encrypt.tables.t_user.columns.password.encryptor=encryptor_aes

# 查询是否使用密文列 ,等于true 查询时通过密文列查询,返回数据为明文,反之查询通过明文列执行,返回数据也是明文列
#spring.shardingsphere.props.query.with.cipher.column=true

# 采用MD5加密策略
spring.shardingsphere.encrypt.encryptors.encryptor_md5.type=MD5

# password为逻辑列，password.plainColumn为数据表明文列，password.cipherColumn为数据表密文列
spring.shardingsphere.encrypt.tables.t_user.columns.password.plainColumn=password
spring.shardingsphere.encrypt.tables.t_user.columns.password.cipherColumn=password_encrypt
spring.shardingsphere.encrypt.tables.t_user.columns.password.encryptor=encryptor_md5

# 查询是否使用密文列 ,等于true 查询时通过密文列查询,返回数据为密文,反之查询通过明文列执行,返回数据也是明文列
spring.shardingsphere.props.query.with.cipher.column=true

# 打印SQl
spring.shardingsphere.props.sql.show=true
